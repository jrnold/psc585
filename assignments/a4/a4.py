#!/usr/bin/env python

import scipy as sp
from scipy import io

final_data = io.loadmat("FinalData.mat")

class FinalModel(object):
    """

    Properties
    -----------------

    delta : float
        Discount factor of the government and provinces
    gloversigma :
        Parameter :math:`\sigma_g`
    k : int
        Number of provinces
    m : int
        Number of states that provinces can take, :math:`2^k`
    n : int
        Number of states, :math:`k 2^k`
    x : ndarray, shape (k, )
        Variable correlated with the wealth generated by each province
    y : ndarray, shape (k, )
        Variable correlated with the cost of war to each province
    wg : float
        Government war cost
    D : ndarray, shape (k, k)
        Matrix of distances between provinces
    S : ndarray, shape (n, k)
        transition matrix

    """
    def __init__(self, **kwargs):
        for k, v in kwargs.iteritems():
            self.__setattr__(k, v)

    @classmethod
    def from_mat(cls, filename):
        """ Load model data from .mat file"""
        final_model = io.loadmat("FinalModel.mat", squeeze_me = True)
        model = final_model['model']
        keys = model.dtype.names
        kwargs = {}
        for k in keys:
            kwargs[k] = model[[k]][0]
        return cls(**kwargs)
    
foo = FinalModel.from_mat("FinalModel.mat")
